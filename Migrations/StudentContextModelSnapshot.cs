// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Student.Models;

#nullable disable

namespace Student.Migrations
{
    [DbContext(typeof(StudentContext))]
    partial class StudentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Student.Models.StudentDetail", b =>
                {
                    b.Property<short>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("Student_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("StudentId"));

                    b.Property<string>("CourseCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Student_Name");

                    b.Property<string>("TeacherId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('NA')")
                        .IsFixedLength();

                    b.Property<string>("Title")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasDefaultValueSql("('Mr')")
                        .IsFixedLength();

                    b.HasKey("StudentId")
                        .HasName("PK__Student___A2F4E98C270B7942");

                    b.HasIndex("CourseCode");

                    b.HasIndex("TeacherId");

                    b.ToTable("Student_Details", (string)null);
                });

            modelBuilder.Entity("Student.Models.StudentDetailsNoCombined", b =>
                {
                    b.Property<short>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("Student_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("StudentId"));

                    b.Property<string>("CourseCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Student_Name");

                    b.Property<string>("TeacherId")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength();

                    b.HasKey("StudentId")
                        .HasName("PK__Student___A2F4E98CF12B577D");

                    b.ToTable("Student_Details_no_Combined", (string)null);
                });

            modelBuilder.Entity("Student.Models.StudentGrade", b =>
                {
                    b.Property<string>("CourseCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CourseTitle")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("Grade")
                        .HasColumnType("decimal(3, 2)");

                    b.Property<short?>("Unit")
                        .HasColumnType("smallint");

                    b.HasKey("CourseCode")
                        .HasName("PK__Student___FC00E0017DC288D9");

                    b.ToTable("Student_Grade", (string)null);
                });

            modelBuilder.Entity("Student.Models.StudentGradeNoCombined", b =>
                {
                    b.Property<string>("CourseCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CourseTitle")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("Grade")
                        .HasColumnType("decimal(3, 2)");

                    b.Property<short?>("Unit")
                        .HasColumnType("smallint");

                    b.HasKey("CourseCode")
                        .HasName("PK__Student___FC00E001D6F365BD");

                    b.ToTable("Student_Grade_no_Combined", (string)null);
                });

            modelBuilder.Entity("Student.Models.Teacher", b =>
                {
                    b.Property<string>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("('NA')")
                        .IsFixedLength();

                    b.Property<string>("CourseCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("TeacherId")
                        .HasName("PK__Teacher__EDF259647932981E");

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("Student.Models.TeacherNoCombined", b =>
                {
                    b.Property<string>("TeacherId")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<string>("CourseCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("TeacherId")
                        .HasName("PK__Teacher___EDF259641A57A0E5");

                    b.ToTable("Teacher_no_Combined", (string)null);
                });

            modelBuilder.Entity("Student.Models.StudentDetail", b =>
                {
                    b.HasOne("Student.Models.StudentGrade", "CourseCodeNavigation")
                        .WithMany("StudentDetails")
                        .HasForeignKey("CourseCode")
                        .HasConstraintName("FK__Student_D__Cours__47DBAE45");

                    b.HasOne("Student.Models.Teacher", "Teacher")
                        .WithMany("StudentDetails")
                        .HasForeignKey("TeacherId")
                        .IsRequired()
                        .HasConstraintName("Fk_TeacherId");

                    b.Navigation("CourseCodeNavigation");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Student.Models.StudentGrade", b =>
                {
                    b.Navigation("StudentDetails");
                });

            modelBuilder.Entity("Student.Models.Teacher", b =>
                {
                    b.Navigation("StudentDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
